#!/bin/ksh
#
# To check the status of the physical disks of a HP Server  with /sbin/hpacucli 
# Status can be ok or critical
#
#	$URL: http://fcil01v140.fci.internal/svn/Nagios-Plugins/plugins/nrpe_scripts/nrpe_hp_pdisk $
#	$Rev: 482 $
#	$Id: nrpe_hp_pdisk 482 2018-04-04 05:25:40Z itlangs $
#
#
# syntax: /usr/lib/nagios/plugins/nrpe_hp_pdisk
#
# responsible: Adam Vollmar
#
# Requirements: nrpe agent must be configured and running, hpasmcli
#               entry in /etc/sudoers or /etc/sudoers.d/nagios
#
# itlenzj: 20140311: script erstellt
# itlenzj: 20140320: bug fix
#

##project## yes=supported, todo=planned, NA=not applicable, not=not allowed, test=test, ?=unknown
# project     Responsible   : itvolla
# project     Level         : 4
# project     CLASS         : MONITORING
# project     Script        : ksh
# project OS  AIX52         : not
# project OS  AIX61         : not
# project OS  AIX71         : not
# project OS  SLES8         : NA
# project OS  SLES9         : yes
# project OS  SLES10        : yes
# project OS  SLES11        : yes
# project OS  SLES11SP2     : yes
# project OS  SLES12        : yes
# project OS  HP-UX         : not
# project     nSID          : NA
# project     DC two-digit  : NA
# project     wcoll extern  : NA
# project     NetApp        : NA
# project     no ssh cw     : NA
# project     no r-commands : NA
# project     node.cfg      : NA
# project DB  ORACLE        : NA
# project DB  DB2           : NA
# project DB  SAPDB         : NA
# project DB  SYBASE        : NA
# project LOC Germany       : yes
# project LOC USA           : todo
# project LOC China         : yes
# project LOC Canada        : NA

HPACUCLI="/usr/sbin/hpacucli"

[[ $1 = "-h" ]] && {
	echo "Check the physical disk status of a HP System with /sbin/hpacucli"
	echo "Status can be OK or Critical. Call $0 with no Parameters "
	exit 3
}
 
[[ $# -gt 0 ]] && {
	echo "Number of parameters wrong. Try $0 -h"
	exit 3
}

[[ -e $HPACUCLI ]] || {
	echo "WARNING - Program $HPACUCLI not found or not executable"
	exit 1
}

# check, if the the program already runs
Count=$(ps -ef | grep $HPACUCLI | grep -c -v grep)
[[ $Count -ge 1 ]] && sleep 10

### Physical Disk ###
STATUSPD=0
## sample output : Smart Array P410i in Slot 0 (Embedded)    (sn: 50123456789ABCDE)
LIST_SLOT=$(sudo $HPACUCLI ctrl all show 2> /dev/null | grep Slot | awk '{print $6}')

for SLOT in $LIST_SLOT; do #{
	PDLIST=$(sudo $HPACUCLI ctrl slot=$SLOT pd all show 2>/dev/null)
	PDSTATUSPD=$(echo "$PDLIST" | grep physicaldrive | awk '{ gsub(")","",$NF); print $NF }')
	## possible status : OK | Rebuilding | something worse
	ALL_STATUS_PD=$(echo -e "${ALL_STATUS_PD:+$ALL_STATUS_PD\n}$PDSTATUSPD")
done  #} 

STAT_COUNT=$(echo "$ALL_STATUS_PD" | grep -cv -e OK -e spare )
[[ $STAT_COUNT -eq 0 ]] && {
	echo "OK - Disks are OK"
	exit 0
}

# get all disks except OK and Rebuilding; whats left must be defect
STAT_COUNT=$(echo "$ALL_STATUS_PD" | grep -cv -e OK -e Rebuilding -e spare )
[[ $STAT_COUNT -ge 1 ]] && {
	echo "CRITICAL - one or more disks are critical"
	echo "$ALL_STATUS_PD" | grep -v -e OK -e Rebuilding
	exit 2
}

STAT_COUNT=$(echo "$ALL_STATUS_PD" | grep -c Rebuilding)
[[ $STAT_COUNT -ge 1 ]] && {
	echo "WARNING - one or more disks are in Rebuild mode"
	echo "$ALL_STATUS_PD" | grep Rebuilding
	exit 1
}


