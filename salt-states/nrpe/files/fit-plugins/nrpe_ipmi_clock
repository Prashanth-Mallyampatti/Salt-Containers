#!/usr/bin/perl
#
#
#   $URL: svn://subversion.eu.fit/nagios/plugins/nrpe/nrpe_ipmi_clock $
#   $Rev: 404 $
#    $Id: nrpe_ipmi_clock 404 2014-07-04 09:05:14Z itlenzj $
#
# Skript prueft den Offset zwischen der IPMI und er System Uhr
# Bei zu groÃƒ Unterschied wird WARNING bzw. CRITICAL
# zurueckgegeben
#
# AUFRUF: /usr/lib/nagios/plugins/nrpe_ipmi_clock
#
# responsible: Joerg Lenz, Netlution GmbH
#
# Mittels "/usr/bin/ipmitool sel time set now" kann die ipmi Zeit 
# mit der aktuellen Systemzeit syncronisiert werden
#
# Requirements: nrpe agent must be configured and running, ipmitool installiter
#               entry in /etc/suoders impitool
#
# itlenzj: 20140311: script erstellt


use strict;
use warnings;
use Getopt::Std;

# Defaults fuer Warning und Critical definieren
# Warning:	300 Sekunden
# Critical:	600 Sekunden
our($opt_w, $opt_c) = (300, 600);

#my ($OK, $WARN, $CRIT, $UNKN) = (0,1,2,3);
my ($OK, $WARN, $CRIT, $UNKN) = (0,1,1,3);

my ($sys_ret, $os_time_sec, $ipmi_time, $ipmi_time_sec, $time_diff, $time_diff_abs, $ipmi_tool);

$ipmi_tool = 'sudo /usr/bin/ipmitool';

# check argumente...
getopts("c:w:");# || sub {
	#print "UNKNOWN: Ungueltige Parameter angegeben! $!\n";
	#exit($UNKN);
#}

if(($opt_w !~ /^\d+$/) || ($opt_c !~ /^\d+$/)) {
	print "UNKNOWN: Ungueltige Werte angegeben! Warning: $opt_w, Critical: $opt_c\n";
	exit($UNKN);
}

if($opt_w >= $opt_c) {
	print "UNKNOWN: Warning Wert muss kleiner als Critical Wert sein: Warning: $opt_w, Critical: $opt_c\n";
	exit($UNKN);
}

# die aktuelle Uhrzeit in Sekunden seit epoch holen
$os_time_sec = `date +%s`;

if($?) {
	print "CRITICAL: Cannot execute 'date'..strange!\n";
	exit($CRIT);
}

chomp($os_time_sec);

# Zeit des IPMI controllers holen
$ipmi_time = `$ipmi_tool sel time get`;

if($?) {
	print "CRITICAL: Error with '$ipmi_tool': $!\n";
	exit($CRIT);
}

chomp($ipmi_time);

# die Zeit ist im Format "MM/DD/YYYY HH:MM:SS"
# in "YYYY-MM-DD HH:MM:SS" umwandeln, an "date"
# uebergeben und diese Zeit in Sekunden seit epoch
# ausgeben lassen

if($ipmi_time =~ /^(\d{2})\/(\d{2})\/(\d{4}) (\d{2}:\d{2}:\d{2})$/) {
	$ipmi_time_sec = `date -d "$3-$1-$2 $4" +%s`;
	
	if($?) {
		print "CRITICAL: Error executing 'date': $!\n";
		exit($CRIT);
	}
} else {
	print "CRITICAL: ipmitool did not return a valid date string! String: $ipmi_time\n";
	exit($CRIT);
}

chomp($ipmi_time_sec);

$time_diff = $ipmi_time_sec - $os_time_sec;

$time_diff_abs = abs($time_diff);

if($time_diff_abs >= $opt_c) {
	print "CRITICAL: IPMI Clock offset: $time_diff Sekunden (W: $opt_w, C: $opt_c)\n 'execute /usr/bin/ipmitool sel time set now' \n";
	exit($CRIT);
} elsif(($time_diff_abs >= $opt_w) && ($time_diff_abs < $opt_c)) {
	print "WARNING: IPMI Clock offset: $time_diff Sekunden (W: $opt_w, C: $opt_c)\n";
	exit($WARN);
} else {
	print "OK: IPMI Clock offset ist innerhalb der Toleranz. $time_diff Sekunden (W: $opt_w, C: $opt_c)\n";
	exit($OK);
}

# if you are here, you will see dragons
print "CRITICAL: Error in plugin!\n";
exit($CRIT);

