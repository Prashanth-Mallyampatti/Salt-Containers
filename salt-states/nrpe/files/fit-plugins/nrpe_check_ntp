#!/bin/ksh
#
# check the ntp offset of the system.
# -w  warning  in milliseconds
# -c  critical in milliseconds
#
# verantwortlich: silz
#
# Umgebung: AIX Linux
#
# aufruf: /usr/lib/nagios/plugins/nrpe_check_ntp
#         /usr/lib/nagios/plugins/nrpe_check_ntp -w 1000 -c 2000
#         funktioniert auch unter user nagios
#

##project## yes=supported, todo=planned, NA=not applicable, not=not allowed, test=test, ?=unknown
# project     Responsible   : itsilz
# project     Level         : 4
# project     CLASS         : MONITORING
# project     Script        : ksh
# project OS  AIX52         : not
# project OS  AIX61         : yes
# project OS  AIX71         : yes
# project OS  SLES8         : not
# project OS  SLES9         : not
# project OS  SLES10        : yes
# project OS  SLES11        : yes
# project OS  SLES11SP2     : yes
# project OS  SLES12        : yes
# project OS  HP-UX         : yes
# project     nSID          : NA
# project     DC two-digit  : NA
# project     wcoll extern  : NA
# project     NetApp        : NA
# project     no ssh cw     : NA
# project     no r-commands : NA
# project     node.cfg      : NA
# project DB  ORACLE        : NA
# project DB  DB2           : NA
# project DB  SAPDB         : NA
# project DB  SYBASE        : NA
# project LOC Germany       : yes
# project LOC USA           : NA
# project LOC China         : NA
# project LOC Canada        : NA
#
# project     Cloud         : yes
# project OS  Ubuntu        : yes


if [[ "$1" = "-h" && -f $0 ]]; then
  sed -n '2,/^$/p' $0
  exit 3
fi

if [[ "$1" = "-?" ]]; then
  echo "nrpe_check_ntp [-w <warning in milliseconds>] [-c <critical in milliseconds>]"
  exit 3
fi


# unter AIX fehlen die execute rechte
# root@odcw99:/ > which ntpq
# /usr/sbin/ntpq
# itsilz@odcw99:/ > ll /usr/sbin/ntpq
# lrwxrwxrwx    1 root     system           19 Aug 23 2012  /usr/sbin/ntpq@ -> /usr/sbin/ntp3/ntpq
# itsilz@odcw99:/ > ll /usr/sbin/ntp3/ntpq
# -r-xr-xr--    1 root     system       105150 Aug 04 2011  /usr/sbin/ntp3/ntpq
#
# Linux hat execute rechte
# root@odct99:/root > which ntpq
# /usr/sbin/ntpq
# itsilz@odct99:/root > ll /usr/sbin/ntpq
# -rwxr-xr-x    1 root     root       178360 May  8  2010 /usr/sbin/ntpq


# AIX braucht sudo eintrag:
#
# root@odcw99:/ > grep NRPE /etc/sudoers.d/NRPE
# User_Alias NRPE = nagios
# Cmnd_Alias NRPE_CMD = /usr/sbin/ntpq -p*
# NRPE    ALL=(ALL) NOPASSWD:NRPE_CMD


UNAME=`uname`
case $UNAME in
  AIX)   NTP="sudo /usr/sbin/ntpq -p" ;;     # da execute rechte fuer non root user fehlen
  HP-UX) NTP="     /usr/sbin/ntpq -p" ;;     # /usr/sbin/ntpq
  Linux) NTP="               ntpq -p" ;;     # SLES:   /usr/sbin/ntpq
                                             # Ubuntu: /usr/bin/ntpq
esac

# in millisekunden
WARNING=1000
CRITICAL=2000

while getopts ":w:c:" PARAM
do
  case $PARAM in
    w)  WARNING="$OPTARG" ;;
    c)  CRITICAL="$OPTARG" ;;
    \?) echo "UNKNOWN: $0 Illegal option '-$OPTARG' found!. Try $0 -w $WARNING -c $CRITICAL"
        exit 3
        ;;
    *)  echo "UNKNOWN: $0 unknown error! Try $0 -w $WARNING -c $CRITICAL"
        exit 3
        ;;
  esac
done


OUTPUT=`$NTP 2>&1`

if [ $? -ne 0 ]; then                               ### retrun code
  echo "UNKNOWN - Programm '$NTP' not available"
  echo "$OUTPUT"
  exit 3
fi


### check header

# AIX und HP-UX
#      remote           refid      st t when poll reach   delay   offset    disp
# ==============================================================================
# Linux und Ubuntu
#      remote           refid      st t when poll reach   delay   offset  jitter
# ==============================================================================

echo "$OUTPUT" | grep -q "remote .* offset"

if [ $? -ne 0 ]; then
  echo "CRITICAL wrong output from 'ntpq -p' (W:$WARNING;C:$CRITICAL)"
  echo "$OUTPUT"
  exit 2
fi


### check anzahl server

ANZ=`echo "$OUTPUT" | tail -n +3 | grep -c ^`

if [ $ANZ -eq 0 ]; then
  echo "CRITICAL no server found from 'ntpq -p' (W:$WARNING;C:$CRITICAL)"
  echo "$OUTPUT"
  exit 2
fi


### check for first character of peer

# space = Discarded due to high stratum and/or failed sanity checks.
# x = Designated falseticker by the intersection algorithm.
# . = Culled from the end of the candidate list.
# - = Discarded by the clustering algorithm.
# + = Included in the final selection set.
# # = Selected for synchronization but distance exceeds maximum.
# * = Selected for synchronization.
# o = Selected for synchronization, pps signal in use.

OFFSET=`echo "$OUTPUT" | tail -n +3 | grep '^*' | awk '{print $9}'`
SERVER=`echo "$OUTPUT" | tail -n +3 | grep '^*' | cut -c2- | awk '{print $1}'`

# wenn kein "^*" gefunden, dann server mit kleinstem stratum
if [ "$OFFSET" = "" ]; then
  OFFSET=`echo "$OUTPUT" | tail -n +3 | sort -n -k3 | head -1 | awk '{print $9}'`
  SERVER=`echo "$OUTPUT" | tail -n +3 | sort -n -k3 | head -1 | cut -c2- | awk '{print $1}'`
fi


### analyse OFFSET

MILLI=`echo $OFFSET | sed 's/^[+-]//'`   # negatives weg
MILLI=`echo $MILLI  | sed 's/[.,].*//'`  # alles hinter komma weg --> nun sind es millesekunden


# test integer

LEER=`echo $MILLI | tr -d 0-9`

if [ "$LEER" != "" ]; then
  echo "CRITICAL wrong format of offset from 'ntpq -p' (W:$WARNING;C:$CRITICAL)|server=$SERVER offset=$OFFSET"
  echo "$OUTPUT"
  exit 2
fi

if [ $MILLI -gt $CRITICAL ]; then
  echo "CRITICAL maximum NTP offset is $MILLI milliseconds (W:$WARNING;C:$CRITICAL)|server=$SERVER offset=$OFFSET"
  echo "$OUTPUT"
  exit 2
fi

if [ $MILLI -gt $WARNING ]; then
  echo "WARNING maximum NTP offset is $MILLI milliseconds (W:$WARNING;C:$CRITICAL)|server=$SERVER offset=$OFFSET"
  echo "$OUTPUT"
  exit 1
fi

echo "OK maximum NTP offset is $MILLI milliseconds (W:$WARNING;C:$CRITICAL)|server=$SERVER offset=$OFFSET"
echo "$OUTPUT"
exit 0

