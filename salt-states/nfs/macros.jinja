{%- macro files_switch(prefix,
                       files,
                       default_files_switch=['id', 'os_family'],
                       indent_width=6) %}
  {#
    Returns a valid value for the "source" parameter of a "file.managed"
    state function. This makes easier the usage of the Template Override and
    Files Switch (TOFS) pattern.

    Params:
      * prefix: pillar prefix to custom ':files_switch'. Colons ':'
        are replaced by '/' to be used as directory prefix (<path_prefix>)
      * files: ordered list of files to look for
      * default_files_switch: if there's no pillar
        '<prefix>:files_switch' this is the ordered list of grains to
        use as selector switch of the directories under
        "<path_prefix>/files"
      * indent_witdh: indentation of the result value to conform to YAML

    Example:

    If we have a state:

      Deploy configuration:
        file.managed:
          - name: /etc/yyy/zzz.conf
          - source: {{ files_switch('xxx', ['/etc/yyy/zzz.conf',
                                            '/etc/yyy/zzz.conf.jinja']) }}
          - nfs: jinja

    In a minion with id=theminion and os_family=RedHat, it's going to be
    rendered as:

      Deploy configuration:
        file.managed:
          - name: /etc/yyy/zzz.conf
          - source:
            - salt://xxx/files/theminion/etc/yyy/zzz.conf
            - salt://xxx/files/theminion/etc/yyy/zzz.conf.jinja
            - salt://xxx/files/RedHat/etc/yyy/zzz.conf
            - salt://xxx/files/RedHat/etc/yyy/zzz.conf.jinja
            - salt://xxx/files/default/etc/yyy/zzz.conf
            - salt://xxx/files/default/etc/yyy/zzz.conf.jinja
          - nfs: jinja
  #}
  {%- set path_prefix = prefix|replace(':', '/') %}
  {%- set files_switch_list = salt['pillar.get'](prefix ~ ':files_switch',
                                           default_files_switch) %}
  {%- for grain in files_switch_list if grains.get(grain) is defined %}
    {%- for file in files %}
      {%- set url = '- salt://' ~ '/'.join([path_prefix,
                                            'files',
                                            grains.get(grain),
                                            file.lstrip('/')]) %}
{{ url | indent(indent_width, true) }}
    {%- endfor %}
  {%- endfor %}
    {%- for file in files %}
      {%- set url = '- salt://' ~ '/'.join([path_prefix,
                                            'files/default',
                                            file.lstrip('/')]) %}
{{ url | indent(indent_width, true) }}
    {%- endfor %}
{%- endmacro %}
